{"version":3,"sources":["components/RegisterForm.js","components/RegisterRow.js","components/RegisterTable.js","utils/APIConstants.js","components/App.js","index.js"],"names":["RegisterForm","props","handleChange","e","name","target","value","type","checked","returnValue","carnet_regex","test","isDisable","setState","options","RegExp","state","carnet","schedule","isLate","className","this","onChange","map","elem","style","htmlFor","id","onClick","onSubmit","disabled","React","Component","RegisterRow","student","scope","Date","datetime","toLocaleString","parseLate","onDelete","RegisterTable","rows","list","element","key","_id","API","BaseUrl","App","student_list","fetch","headers","Accept","then","res","json","console","log","catch","err","alert","request","method","body","JSON","stringify","buffer_list","slice","concat","register","index","find","splice","handleSubmit","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03da09fe.chunk.js","sourcesContent":["import React from \"react\";\n\nclass RegisterForm extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.options=[\n            \"Lunes de 09:00 a 11:00\",\n            \"Martes de 13:30 a 15:30\",\n            \"Miércoles de 09:00 a 11:00\",\n            \"Jueves de 13:30 a 15:30\",\n            \"Viernes de 09:00 a 11:00\",\n            \"Viernes de 15:30 a 17:30\",\n        ]\n\n        this.carnet_regex = new RegExp('^[0-9]{8}$');\n\n        this.state = {\n            carnet:\"\",\n            schedule:this.options[0],\n            isLate:true,\n            isDisable: true,\n        }\n\n    }\n\n    handleChange = (e)=>{\n        let name = e.target.name;\n        let value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n\n        let returnValue = {\n            [name]: value,\n        }\n\n        if(name === \"carnet\"){\n            if(this.carnet_regex.test(value)){\n                returnValue.isDisable = false;\n            }else{\n                returnValue.isDisable = true;\n            }    \n        }\n\n        this.setState(returnValue);\n    }\n    \n    render(){\n        return(\n            <div className=\"jumbotron\">\n                <h1>\n                    Registro de laboratorio.\n                </h1>\n\n                <div className=\"form-group\">\n                    <label className=\"col-sm-2 col-form-label\">Ingrese el carnet: </label><br/>\n                    <input className=\"form-control\" \n                        type=\"text\" \n                        name=\"carnet\" \n                        value={this.state.carnet}\n                        onChange={this.handleChange}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label >Seleccione el horario:</label>\n                    <select name=\"schedule\" \n                        className=\"form-control custom-select\" \n                        value={this.state.schedule}\n                        onChange={this.handleChange}>\n                        {\n                            this.options.map(elem=>{\n                                return <option>{elem}</option>\n                            })\n                        }\n                    </select>\n                </div>\n                \n                <div style={{\"marginTop\":1+\"em\", \"marginBottom\":1+\"em\"}} >\n                    <input name=\"isLate\" \n                        type=\"checkbox\" \n                        onChange={this.handleChange}\n                        checked={this.state.isLate}/>\n                    <label style={{\"marginLeft\":1+\"em\"}} htmlFor=\"isLate\">Llegó tarde?</label>\n                </div>\n\n                <div className=\"form-group\">\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-info\" \n                        id=\"submit_btn\"\n                        onClick={()=>{\n                            this.props.onSubmit({\n                                carnet: this.state.carnet,\n                                schedule: this.state.schedule,\n                                isLate: this.state.isLate,\n                            });\n                        }} \n                        disabled = {this.state.isDisable}>Ingresar</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RegisterForm;","import React from \"react\";\n\nclass RegisterRow extends React.Component{\n    render(){\n        let student = this.props.student;\n\n        return(\n            <tr className=\"table-active\">\n                <th scope='row'>{student.carnet}</th>\n                <td>{student.schedule}</td>\n                <td>{new Date(student.datetime).toLocaleString()}</td>\n                <td>{parseLate(student.isLate)}</td>\n                <td>\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-danger\"\n                        onClick={()=>{\n                            this.props.onDelete();\n                        }}>\n                            Drop\n                        </button>\n                </td>\n            </tr>\n        );\n    }\n}\n\nconst parseLate= value=>{\n    if(value){\n        return \"Tardísimo\"\n    }\n    return \"A tiempo\"\n}\n\nexport default RegisterRow;","import React from \"react\";\nimport RegisterRow from \"./RegisterRow\";\n\nclass RegisterTable extends React.Component{\n    render(){\n        let rows = this.props.list.map(element=>{\n            return <RegisterRow \n                key={element._id} \n                student={element}\n                onDelete= {()=>{\n                    this.props.onDelete(element);\n                }}\n                />\n        });\n\n        return(\n            <div>\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr className=\"table-primary\">\n                            <th scope=\"col\">Carnet</th>\n                            <th scope=\"col\">Horario de laboratorio</th>\n                            <th scope=\"col\">Hora de ingreso</th>\n                            <th scope=\"col\">Tarde?</th>\n                            <th scope=\"col\">Eliminar</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default RegisterTable;","let host=\"localhost\";\nlet port=\"3500\";\n\nlet API={\n    BaseUrl: `http://${host}:${port}`\n}\n\nexport default API;","import React from \"react\"\nimport RegisterForm from './RegisterForm'\nimport RegisterTable from './RegisterTable'\nimport API from '../utils/APIConstants'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            student_list:[],\n        }\n    }\n\n    componentDidMount(){\n        fetch(`${API.BaseUrl}/register`, {\n            headers:{\n                Accept: \"application/json\"\n            }\n        })\n            .then(res=>{\n                return res.json();\n            })\n            .then(res=>{\n                console.log(res)\n                this.setState({\n                    student_list: res?res:[],\n                })\n            })\n            .catch(err=>{\n                alert(\"Ocurrió un error en la conexión\");\n            })\n    }\n\n    handleSubmit(student){\n        let request = {\n            method: \"POST\",\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n            },\n            body: JSON.stringify({\n                carnet: student.carnet,\n                schedule: student.schedule,\n                isLate: student.isLate,\n            })\n        }\n\n        fetch(`${API.BaseUrl}/register`, request)\n            .then(res=>{\n                return res.json();\n            })\n            .then(res=>{\n                let buffer_list = this.state.student_list.slice();\n                this.setState({\n                    student_list: buffer_list.concat([res.register]),\n                })\n            })  \n            .catch(err=>{\n                alert(\"Ocurrió un error en la conexión\");\n            });\n    }\n\n    handleDelete(student){\n        let request = {\n            method: \"DELETE\",\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n            },\n            body: JSON.stringify({\n                _id: student._id,\n            }) \n        }\n\n        fetch(`${API.BaseUrl}/register`, request)\n            .then(res=>res.json())\n            .then(res=>{\n                let index = this.state.student_list.find(value=>{\n                    return value._id === student._id;\n                })\n        \n                let buffer_list = this.state.student_list.slice();\n                buffer_list.splice(index, 1);\n        \n                this.setState({\n                    student_list: buffer_list\n                });\n            })\n            .catch(err=>{\n\n            })\n    }\n    \n    render(){\n        return (\n            <div className=\"container\" style={{\"marginTop\":2+\"em\", \"marginBottom\":2+\"em\"}}>\n                <RegisterForm \n                    onSubmit = {(student)=>{\n                        this.handleSubmit(student);\n                    }}\n                />\n                <RegisterTable \n                    list={this.state.student_list}\n                    onDelete={(student)=>this.handleDelete(student)}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './components/App';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}