{"ast":null,"code":"var _jsxFileName = \"/home/sofy/Escritorio/Pfinal/uniendo/src/components/App.js\";\nimport React from \"react\";\nimport RegisterForm from './RegisterForm';\nimport RegisterTable from './RegisterTable';\nimport API from '../utils/APIConstants';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      IDE_list: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"\".concat(API.BaseUrl, \"/register\"), {\n      headers: {\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n      this.setState({\n        IDE_list: res ? res : []\n      });\n    }).catch(err => {\n      alert(\"Ocurrió un error en la conexión\");\n    });\n  }\n\n  handleSubmit(student) {\n    let request = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nombre: student.nombre,\n        desarrollador: student.desarrollador,\n        lanzamiento: student.lanzamiento,\n        programado: student.programado,\n        SO: student.SO\n      })\n    };\n    fetch(\"\".concat(API.BaseUrl, \"/register\"), request).then(res => {\n      return res.json();\n    }).then(res => {\n      let buffer_list = this.state.IDE_list.slice();\n      this.setState({\n        IDE_list: buffer_list.concat([res.register])\n      });\n    }).catch(err => {\n      alert(\"Ocurrió un error en la conexión\");\n    });\n  }\n\n  handleDelete(IDE) {\n    let request = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        _id: IDE._id\n      })\n    };\n    fetch(\"\".concat(API.BaseUrl, \"/register\"), request).then(res => res.json()).then(res => {\n      let index = this.state.IDE_list.find(value => {\n        return value._id === IDE._id;\n      });\n      let buffer_list = this.state.student_list.slice();\n      buffer_list.splice(index, 1);\n      this.setState({\n        IDE_list: buffer_list\n      });\n    }).catch(err => {});\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        \"marginTop\": 2 + \"em\",\n        \"marginBottom\": 2 + \"em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(RegisterForm, {\n      onSubmit: IDE => {\n        this.handleSubmit(IDE);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(RegisterTable, {\n      list: this.state.IDE_list,\n      onDelete: IDE => this.handleDelete(IDE),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sofy/Escritorio/Pfinal/uniendo/src/components/App.js"],"names":["React","RegisterForm","RegisterTable","API","App","Component","constructor","props","state","IDE_list","componentDidMount","fetch","BaseUrl","headers","Accept","then","res","json","console","log","setState","catch","err","alert","handleSubmit","student","request","method","body","JSON","stringify","nombre","desarrollador","lanzamiento","programado","SO","buffer_list","slice","concat","register","handleDelete","IDE","_id","index","find","value","student_list","splice","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport RegisterForm from './RegisterForm'\nimport RegisterTable from './RegisterTable'\nimport API from '../utils/APIConstants'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            IDE_list:[],\n        }\n    }\n\n    componentDidMount(){\n        fetch(`${API.BaseUrl}/register`, {\n            headers:{\n                Accept: \"application/json\"\n            }\n        })\n            .then(res=>{\n                return res.json();\n            })\n            .then(res=>{\n                console.log(res)\n                this.setState({\n                    IDE_list: res?res:[],\n                })\n            })\n            .catch(err=>{\n                alert(\"Ocurrió un error en la conexión\");\n            })\n    }\n\n    handleSubmit(student){\n        let request = {\n            method: \"POST\",\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n            },\n            body: JSON.stringify({\n                nombre: student.nombre,\n                desarrollador: student.desarrollador,\n                lanzamiento: student.lanzamiento,\n                programado: student.programado,\n                SO: student.SO,\n            })\n        }\n\n        fetch(`${API.BaseUrl}/register`, request)\n            .then(res=>{\n                return res.json();\n            })\n            .then(res=>{\n                let buffer_list = this.state.IDE_list.slice();\n                this.setState({\n                    IDE_list: buffer_list.concat([res.register]),\n                })\n            })  \n            .catch(err=>{\n                alert(\"Ocurrió un error en la conexión\");\n            });\n    }\n\n    handleDelete(IDE){\n        let request = {\n            method: \"DELETE\",\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n            },\n            body: JSON.stringify({\n                _id:IDE._id,\n            }) \n        }\n\n        fetch(`${API.BaseUrl}/register`, request)\n            .then(res=>res.json())\n            .then(res=>{\n                let index = this.state.IDE_list.find(value=>{\n                    return value._id === IDE._id;\n                })\n        \n                let buffer_list = this.state.student_list.slice();\n                buffer_list.splice(index, 1);\n        \n                this.setState({\n                    IDE_list: buffer_list\n                });\n            })\n            .catch(err=>{\n\n            })\n    }\n    \n    render(){\n        return (\n            <div className=\"container\" style={{\"marginTop\":2+\"em\", \"marginBottom\":2+\"em\"}}>\n                <RegisterForm \n                    onSubmit = {(IDE)=>{\n                        this.handleSubmit(IDE);\n                    }}\n                />\n                <RegisterTable \n                    list={this.state.IDE_list}\n                    onDelete={(IDE)=>this.handleDelete(IDE)}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}